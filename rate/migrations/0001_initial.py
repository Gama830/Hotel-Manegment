# Generated by Django 5.2.6 on 2025-09-18 05:32

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rooms', '0001_initial'),
        ('timeslotmaster', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RatePlan',
            fields=[
                ('rate_plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('rate_name', models.CharField(help_text="Name of the rate plan (e.g., 'Summer Special', 'Corporate Rate')", max_length=100)),
                ('season_type', models.CharField(choices=[('PEAK', 'Peak Season'), ('HIGH', 'High Season'), ('REGULAR', 'Regular Season'), ('LOW', 'Low Season'), ('OFF', 'Off Season')], default='REGULAR', help_text='Season category for this rate', max_length=10)),
                ('valid_from', models.DateField(help_text='Start date for this rate plan')),
                ('valid_to', models.DateField(help_text='End date for this rate plan')),
                ('base_rate', models.DecimalField(decimal_places=2, help_text='Base rate per night for the room type', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('base_rate_for_24', models.DecimalField(decimal_places=2, help_text='Base rate for 24 Hrs', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('additional_guest_charges', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Extra charges per additional guest beyond base occupancy', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('meal_plan', models.CharField(choices=[('EP', 'European Plan (Room Only)'), ('CP', 'Continental Plan (Room + Breakfast)'), ('MAP', 'Modified American Plan (Room + Breakfast + Dinner)'), ('AP', 'American Plan (Room + All Meals)'), ('AI', 'All Inclusive')], default='EP', help_text='Meal plan included in the rate', max_length=3)),
                ('meal_plan_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Cost of meal plan per person per day (if applicable)', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cancellation_policy', models.TextField(help_text='Cancellation policy for this rate plan')),
                ('description', models.TextField(blank=True, help_text='Additional description or terms for this rate plan', null=True)),
                ('weekend_surcharge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Additional charges for weekends (percentage or fixed amount)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_percentage_surcharge', models.BooleanField(default=False, help_text='Whether weekend surcharge is a percentage (True) or fixed amount (False)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this rate plan is currently active')),
                ('minimum_stay', models.PositiveIntegerField(default=1, help_text='Minimum number of nights required for this rate', validators=[django.core.validators.MinValueValidator(1)])),
                ('maximum_stay', models.PositiveIntegerField(blank=True, help_text='Maximum number of nights allowed for this rate (optional)', null=True)),
                ('advance_booking_days', models.PositiveIntegerField(default=0, help_text='Minimum days in advance required for booking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room_type', models.ForeignKey(help_text='Links to Room Type Master', on_delete=django.db.models.deletion.CASCADE, related_name='rate_plans', to='rooms.roomtype')),
                ('time_slot', models.ForeignKey(help_text='Links to Time Slot Master', on_delete=django.db.models.deletion.CASCADE, related_name='rate_plans', to='timeslotmaster.timeslotmaster')),
            ],
            options={
                'verbose_name': 'Rate Plan',
                'verbose_name_plural': 'Rate Plans',
                'ordering': ['room_type', 'valid_from', 'rate_name'],
                'constraints': [models.CheckConstraint(condition=models.Q(('valid_to__gt', models.F('valid_from'))), name='valid_to_after_valid_from'), models.CheckConstraint(condition=models.Q(('base_rate__gt', 0)), name='base_rate_positive')],
                'unique_together': {('room_type', 'rate_name', 'valid_from', 'valid_to')},
            },
        ),
    ]
