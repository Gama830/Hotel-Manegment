# Generated by Django 5.2.6 on 2025-09-18 03:13

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('guest', '0001_initial'),
        ('rate', '0001_initial'),
        ('rooms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for analytics data', unique=True)),
                ('total_bookings', models.IntegerField(default=0, help_text='Total bookings created on this date')),
                ('confirmed_bookings', models.IntegerField(default=0, help_text='Number of confirmed bookings')),
                ('cancelled_bookings', models.IntegerField(default=0, help_text='Number of cancelled bookings')),
                ('walk_in_bookings', models.IntegerField(default=0, help_text='Number of walk-in bookings')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, help_text='Total revenue from bookings', max_digits=12)),
                ('average_booking_value', models.DecimalField(decimal_places=2, default=0, help_text='Average booking value', max_digits=10)),
                ('occupancy_rate', models.DecimalField(decimal_places=2, default=0, help_text='Occupancy rate percentage', max_digits=5)),
                ('average_daily_rate', models.DecimalField(decimal_places=2, default=0, help_text='Average daily rate (ADR)', max_digits=10)),
                ('revenue_per_available_room', models.DecimalField(decimal_places=2, default=0, help_text='Revenue per available room (RevPAR)', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Booking Analytics',
                'verbose_name_plural': 'Booking Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CheckInAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for analytics data', unique=True)),
                ('total_checkins', models.IntegerField(default=0, help_text='Total check-ins completed on this date')),
                ('walk_in_checkins', models.IntegerField(default=0, help_text='Number of walk-in check-ins')),
                ('mobile_checkins', models.IntegerField(default=0, help_text='Number of mobile check-ins')),
                ('average_checkin_time', models.DurationField(blank=True, help_text='Average time taken for check-in process', null=True)),
                ('payment_completion_rate', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of check-ins with completed payments', max_digits=5)),
                ('id_verification_rate', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of check-ins with verified IDs', max_digits=5)),
                ('digital_key_issuance_rate', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of check-ins with digital keys issued', max_digits=5)),
                ('average_satisfaction_rating', models.DecimalField(blank=True, decimal_places=2, help_text='Average guest satisfaction rating', max_digits=3, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Check-In Analytics',
                'verbose_name_plural': 'Check-In Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CorporateAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.CharField(help_text='Unique corporate/agent identifier', max_length=20, unique=True)),
                ('name', models.CharField(help_text='Corporate/Agent name', max_length=150)),
                ('agent_type', models.CharField(choices=[('CORPORATE', 'Corporate Client'), ('AGENT', 'Travel Agent'), ('TOUR_OPERATOR', 'Tour Operator'), ('EVENT_PLANNER', 'Event Planner'), ('WEDDING_PLANNER', 'Wedding Planner'), ('OTHER', 'Other')], default='CORPORATE', help_text='Type of corporate client or agent', max_length=20)),
                ('contact_person', models.CharField(help_text='Primary contact person name', max_length=100)),
                ('designation', models.CharField(blank=True, help_text='Contact person designation', max_length=100, null=True)),
                ('address', models.TextField(help_text='Complete address')),
                ('city', models.CharField(help_text='City', max_length=100)),
                ('state', models.CharField(help_text='State/Province', max_length=100)),
                ('country', models.CharField(default='India', help_text='Country', max_length=100)),
                ('postal_code', models.CharField(help_text='Postal/ZIP code', max_length=20)),
                ('phone', models.CharField(help_text='Primary phone number', max_length=20)),
                ('mobile', models.CharField(blank=True, help_text='Mobile number', max_length=20, null=True)),
                ('email', models.EmailField(help_text='Primary email address', max_length=254)),
                ('website', models.URLField(blank=True, help_text='Website URL', null=True)),
                ('business_registration', models.CharField(blank=True, help_text='Business registration number', max_length=50, null=True)),
                ('gstin', models.CharField(blank=True, help_text='GSTIN (if applicable)', max_length=15, null=True)),
                ('pan_number', models.CharField(blank=True, help_text='PAN number', max_length=10, null=True)),
                ('contracted_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Special contracted rate per night', max_digits=10)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Commission rate percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('credit_limit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Credit limit amount', max_digits=12)),
                ('payment_terms', models.CharField(choices=[('IMMEDIATE', 'Immediate Payment'), ('NET_7', 'Net 7 Days'), ('NET_15', 'Net 15 Days'), ('NET_30', 'Net 30 Days'), ('NET_45', 'Net 45 Days'), ('NET_60', 'Net 60 Days'), ('ADVANCE', 'Advance Payment Required')], default='NET_30', help_text='Payment terms', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this corporate/agent is currently active')),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Corporate/Agent',
                'verbose_name_plural': 'Corporate/Agents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReservationSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(help_text='Unique source identifier', max_length=20, unique=True)),
                ('name', models.CharField(help_text='Source name (e.g., Booking.com, Expedia, Company Website)', max_length=100)),
                ('source_type', models.CharField(choices=[('OTA', 'Online Travel Agency'), ('WEBSITE', 'Website'), ('AGENT', 'Travel Agent'), ('CORPORATE', 'Corporate'), ('DIRECT', 'Direct'), ('PHONE', 'Phone'), ('EMAIL', 'Email'), ('WALK_IN', 'Walk-in'), ('OTHER', 'Other')], default='OTHER', help_text='Type of reservation source', max_length=20)),
                ('contact_person', models.CharField(blank=True, help_text='Contact person name', max_length=100, null=True)),
                ('email', models.EmailField(blank=True, help_text='Contact email', max_length=254, null=True)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20, null=True)),
                ('address', models.TextField(blank=True, help_text='Contact address', null=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Commission rate percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this source is currently active')),
                ('website_url', models.URLField(blank=True, help_text='Website URL', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this source', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reservation Source',
                'verbose_name_plural': 'Reservation Sources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RoomAssignmentRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Rule name for identification', max_length=100)),
                ('rule_type', models.CharField(choices=[('LOYALTY_BASED', 'Loyalty Level Based'), ('PREFERENCE_BASED', 'Guest Preference Based'), ('AVAILABILITY_BASED', 'Availability Based'), ('REVENUE_BASED', 'Revenue Optimization'), ('CUSTOM', 'Custom Rule')], default='CUSTOM', max_length=20)),
                ('priority', models.IntegerField(default=0, help_text='Rule priority (higher number = higher priority)')),
                ('conditions', models.JSONField(default=dict, help_text='Rule conditions in JSON format')),
                ('actions', models.JSONField(default=dict, help_text='Actions to take when rule matches')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this rule is currently active')),
                ('description', models.TextField(blank=True, help_text='Description of what this rule does')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Room Assignment Rule',
                'verbose_name_plural': 'Room Assignment Rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RoomAvailabilityCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for which availability is cached')),
                ('is_available', models.BooleanField(default=True, help_text='Whether room is available on this date')),
                ('booking_id', models.IntegerField(blank=True, help_text='ID of booking that makes room unavailable', null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='When this cache entry was last updated')),
            ],
            options={
                'verbose_name': 'Room Availability Cache',
                'verbose_name_plural': 'Room Availability Cache',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_date', models.DateField(help_text='Check-in Date')),
                ('check_out_date', models.DateField(help_text='Check-out Date')),
                ('actual_check_in_time', models.DateTimeField(blank=True, help_text='Actual check-in date and time', null=True)),
                ('actual_check_out_time', models.DateTimeField(blank=True, help_text='Actual check-out date and time', null=True)),
                ('number_of_adults', models.PositiveIntegerField(default=1, help_text='Number of adults', validators=[django.core.validators.MinValueValidator(1)])),
                ('number_of_children', models.PositiveIntegerField(default=0, help_text='Number of children', validators=[django.core.validators.MinValueValidator(0)])),
                ('booking_source', models.CharField(choices=[('DIRECT', 'Direct'), ('OTA', 'Online Travel Agency'), ('AGENT', 'Travel Agent'), ('PHONE', 'Phone'), ('EMAIL', 'Email'), ('WALK_IN', 'Walk-in'), ('CORPORATE', 'Corporate'), ('WEBSITE', 'Website')], default='DIRECT', help_text='Booking Source (direct, OTA, agent)', max_length=20)),
                ('status', models.CharField(choices=[('CONFIRMED', 'Confirmed'), ('CHECKED_IN', 'Checked In'), ('CHECKED_OUT', 'Checked Out'), ('CANCELED', 'Canceled'), ('NO_SHOW', 'No Show'), ('PENDING', 'Pending')], default='CONFIRMED', help_text='Reservation Status (confirmed, pending, cancelled)', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total booking amount', max_digits=10)),
                ('advance_payment', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Advance payment received', max_digits=10)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PARTIAL', 'Partial Payment'), ('PAID', 'Fully Paid'), ('REFUNDED', 'Refunded'), ('CANCELLED', 'Cancelled')], default='PENDING', help_text='Payment status', max_length=20)),
                ('payment_method', models.CharField(blank=True, help_text='Payment method used', max_length=50, null=True)),
                ('special_requests', models.TextField(blank=True, help_text='Special Requests', null=True)),
                ('confirmation_number', models.CharField(blank=True, help_text='External confirmation number (for OTA bookings)', max_length=50, null=True)),
                ('booking_notes', models.TextField(blank=True, help_text='Internal booking notes', null=True)),
                ('guest_preferences', models.JSONField(default=dict, help_text='Store booking-specific guest preferences')),
                ('auto_assigned_room', models.BooleanField(default=False, help_text='Track if room was automatically assigned')),
                ('modification_count', models.IntegerField(default=0, help_text='Track number of booking modifications')),
                ('cancellation_reason', models.TextField(blank=True, help_text='Reason for booking cancellation')),
                ('workflow_completed', models.BooleanField(default=False, help_text='Whether booking workflow is completed')),
                ('base_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Base booking amount before dynamic pricing', max_digits=10)),
                ('dynamic_pricing_applied', models.BooleanField(default=False, help_text='Whether dynamic pricing has been applied')),
                ('pricing_factors', models.JSONField(default=dict, help_text='Factors used in dynamic pricing calculation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('guest', models.ForeignKey(help_text='Guest ID or details', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='guest.guest')),
                ('rate_plan', models.ForeignKey(blank=True, help_text='Rate Plan applied to this booking', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='rate.rateplan')),
                ('room', models.ForeignKey(help_text='Room Type and Number', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='rooms.room')),
                ('corporate_agent', models.ForeignKey(blank=True, help_text='Corporate client or travel agent', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='booking.corporateagent')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_completed', models.CharField(choices=[('GUEST_INFO', 'Guest Information'), ('ROOM_SELECTION', 'Room Selection'), ('PAYMENT', 'Payment Processing'), ('CONFIRMATION', 'Booking Confirmation')], default='GUEST_INFO', help_text='Current completed step in the booking workflow', max_length=50)),
                ('workflow_data', models.JSONField(default=dict, help_text='Store intermediate data during booking process')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='workflow', to='booking.booking')),
            ],
            options={
                'verbose_name': 'Booking Workflow',
                'verbose_name_plural': 'Booking Workflows',
            },
        ),
        migrations.CreateModel(
            name='GuestPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_floor', models.IntegerField(blank=True, help_text='Specific preferred floor number', null=True)),
                ('floor_preference', models.CharField(choices=[('LOW', 'Lower Floors (1-3)'), ('MID', 'Middle Floors (4-7)'), ('HIGH', 'Higher Floors (8+)'), ('NO_PREFERENCE', 'No Preference')], default='NO_PREFERENCE', help_text='General floor preference', max_length=20)),
                ('preferred_view', models.CharField(blank=True, choices=[], help_text='Preferred room view', max_length=20)),
                ('preferred_bed_type', models.CharField(blank=True, choices=[], help_text='Preferred bed type', max_length=20)),
                ('accessibility_needs', models.BooleanField(default=False, help_text='Guest has accessibility requirements')),
                ('quiet_room_preference', models.BooleanField(default=False, help_text='Guest prefers quiet rooms')),
                ('smoking_preference', models.BooleanField(default=False, help_text='Guest prefers smoking rooms')),
                ('high_floor_preference', models.BooleanField(default=False, help_text='Guest prefers higher floors')),
                ('connecting_rooms', models.BooleanField(default=False, help_text='Guest often needs connecting rooms')),
                ('early_checkin', models.BooleanField(default=False, help_text='Guest often requests early check-in')),
                ('late_checkout', models.BooleanField(default=False, help_text='Guest often requests late check-out')),
                ('special_dietary_requirements', models.TextField(blank=True, help_text='Special dietary requirements or preferences')),
                ('preferred_amenities', models.JSONField(default=list, help_text='List of preferred amenity IDs')),
                ('notes', models.TextField(blank=True, help_text='Additional preference notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('guest', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='guest.guest')),
            ],
            options={
                'verbose_name': 'Guest Preference',
                'verbose_name_plural': 'Guest Preferences',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(help_text='Unique transaction identifier', max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('BOOKING_ADVANCE', 'Booking Advance Payment'), ('CHECKIN_PAYMENT', 'Check-in Payment'), ('ADDITIONAL_CHARGES', 'Additional Charges'), ('REFUND', 'Refund'), ('CANCELLATION_FEE', 'Cancellation Fee')], help_text='Type of transaction', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Credit/Debit Card'), ('UPI', 'UPI'), ('NET_BANKING', 'Net Banking'), ('WALLET', 'Digital Wallet'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque')], help_text='Payment method used', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', help_text='Transaction status', max_length=20)),
                ('gateway_transaction_id', models.CharField(blank=True, help_text='Payment gateway transaction ID', max_length=100)),
                ('gateway_response', models.JSONField(default=dict, help_text='Payment gateway response data')),
                ('processed_by', models.CharField(blank=True, help_text='Staff member who processed the transaction', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional transaction notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, help_text='Associated booking', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_transactions', to='booking.booking')),
            ],
            options={
                'verbose_name': 'Payment Transaction',
                'verbose_name_plural': 'Payment Transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
