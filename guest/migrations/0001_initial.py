# Generated by Django 5.2.6 on 2025-09-18 15:22

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('guest_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nationality', models.CharField(default='Indian', max_length=100)),
                ('id_proof_type', models.CharField(choices=[('AADHAR', 'Aadhar Card'), ('PAN', 'PAN Card'), ('PASSPORT', 'Passport'), ('DRIVING_LICENSE', 'Driving License'), ('VOTER_ID', 'Voter ID'), ('OTHER', 'Other')], max_length=20)),
                ('id_proof_number', models.CharField(max_length=50)),
                ('id_proof_image', models.ImageField(blank=True, help_text='Upload a clear image of the ID proof document (Max size: 5MB)', null=True, upload_to='guest_id_proofs/')),
                ('loyalty_level', models.CharField(choices=[('BRONZE', 'Bronze'), ('SILVER', 'Silver'), ('GOLD', 'Gold'), ('PLATINUM', 'Platinum'), ('DIAMOND', 'Diamond')], default='BRONZE', max_length=10)),
                ('member_id', models.CharField(blank=True, max_length=20, null=True)),
                ('preferences_notes', models.TextField(blank=True, null=True)),
                ('loyalty_points', models.IntegerField(default=0, help_text='Current loyalty points balance')),
                ('total_stays', models.IntegerField(default=0, help_text='Total number of completed stays')),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, help_text='Total amount spent across all bookings', max_digits=12)),
                ('last_stay_date', models.DateField(blank=True, help_text='Date of last completed stay', null=True)),
                ('preferred_communication', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('BOTH', 'Both'), ('NONE', 'None')], default='EMAIL', help_text='Preferred communication method', max_length=10)),
                ('marketing_consent', models.BooleanField(default=True, help_text='Consent for marketing communications')),
                ('is_vip', models.BooleanField(default=False, help_text='VIP guest status')),
                ('vip_notes', models.TextField(blank=True, help_text='VIP guest special notes and requirements')),
                ('is_blacklisted', models.BooleanField(default=False, help_text='Guest is blacklisted')),
                ('blacklist_reason', models.TextField(blank=True, help_text='Reason for blacklisting')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Guest',
                'verbose_name_plural': 'Guests',
                'ordering': ['first_name', 'last_name'],
            },
        ),
    ]
