# Generated by Django 5.2.6 on 2025-09-15 04:41

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('booking', '0001_initial'),
        ('guest', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(help_text='Unique service identifier', max_length=20, unique=True)),
                ('service_name', models.CharField(help_text='Service name (e.g., Spa, Laundry, Room Service)', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the service', null=True)),
                ('rate_cost', models.DecimalField(decimal_places=2, help_text='Service rate/cost in â‚¹', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('tax_applicable', models.BooleanField(default=True, help_text='Whether tax is applicable on this service')),
                ('availability', models.CharField(choices=[('24_7', '24/7 Available'), ('BUSINESS_HOURS', 'Business Hours Only'), ('WEEKDAYS', 'Weekdays Only'), ('WEEKENDS', 'Weekends Only'), ('CUSTOM', 'Custom Hours')], default='BUSINESS_HOURS', help_text='Service availability schedule', max_length=20)),
                ('available_from', models.TimeField(blank=True, help_text='Service available from (for custom hours)', null=True)),
                ('available_to', models.TimeField(blank=True, help_text='Service available until (for custom hours)', null=True)),
                ('available_days', models.CharField(blank=True, help_text='Available days (for custom schedule)', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this service is currently active')),
                ('requires_booking', models.BooleanField(default=False, help_text='Whether this service requires advance booking')),
                ('max_capacity', models.PositiveIntegerField(blank=True, help_text='Maximum capacity/slots available (if applicable)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['service_name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Quantity of the service', validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at time of billing', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('18.00'), help_text='Tax rate percentage applied', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total bill amount including tax', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('BILLED', 'Billed'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='BILLED', help_text='Current payment status of this charge', max_length=10)),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, help_text='Associated booking, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_charges', to='booking.booking')),
                ('guest', models.ForeignKey(help_text='Guest to bill', on_delete=django.db.models.deletion.PROTECT, related_name='service_charges', to='guest.guest')),
                ('service', models.ForeignKey(help_text='Which service is being billed', on_delete=django.db.models.deletion.PROTECT, related_name='charges', to='service.service')),
            ],
            options={
                'verbose_name': 'Service Charge',
                'verbose_name_plural': 'Service Charges',
                'ordering': ['-created_at'],
            },
        ),
    ]
